{"version":3,"sources":["../src/schema-validator.js"],"names":[],"mappings":"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","file":"schema-validator.js","sourcesContent":["import tv4 from \"tv4\";\nimport SchemaLoader from \"./schema-loader\";\n\nconst DEFAULT_OPTIONS = {\n  schema: null,\n  schemas: null,\n  formats: null,\n  keywords: null,\n  configure: null,\n  loadMissingSchemas: false,\n  checkRecursive: false,\n  banUnknownProperties: false,\n  loader: null,\n};\n\nexport default class SchemaValidator {\n  constructor(options) {\n    this.options = options;\n    this.loader = this.options.loader || new SchemaLoader(this.options);\n    this.schema = this.wrapSchema(this.options.schema);\n    this.tv4 = tv4.freshApi();\n\n    if (options.schemas) {\n      this.addSchemas(options.schemas);\n    }\n    if (options.formats) {\n      this.tv4.addFormat(options.formats);\n    }\n    if (options.keywords) {\n      this.defineKeywords(options.keywords);\n    }\n    if (options.configure) {\n      options.configure.call(null, this.tv4, this.options);\n    }\n  }\n\n  wrapSchema(schemaOrFilePath) {\n    if (typeof schemaOrFilePath === \"string\") {\n      return this.loader.loadLocalSchemaSync(schemaOrFilePath);\n    } else {\n      return schemaOrFilePath;\n    }\n  }\n\n  addSchemas(schemas) {\n    if (Array.isArray(schemas)) {\n      schemas.forEach(s => {\n        this.tv4.addSchema(this.wrapSchema(s));\n      });\n    } else {\n      Object.keys(schemas).forEach(k => {\n        this.tv4.addSchema(k, this.wrapSchema(schemas[k]));\n      });\n    }\n  }\n\n  defineKeywords(keywords) {\n    Object.keys(keywords).forEach(k => {\n      this.tv4.defineKeyword(k, keywords[k]);\n    });\n  }\n\n  validateJSON(json) {\n    return new Promise(resolve => {\n      const data = this.loader.parseJSON(json);\n      resolve(this.validate(data));\n    });\n  }\n\n  validate(data) {\n    return new Promise(resolve => {\n      const result = this.callValidateMultiple(data);\n\n      if (result.missing && result.missing.length > 0 && this.options.loadMissingSchemas) {\n        resolve(\n          this.loadMissing(result.missing)\n          .then(() => this.callValidateMultiple(data))\n        );\n        return;\n      }\n\n      resolve(result);\n    });\n  }\n\n  callValidateMultiple(data) {\n    return this.tv4.validateMultiple(\n      data,\n      this.schema,\n      this.options.checkRecursive,\n      this.options.banUnknownProperties\n    );\n  }\n\n  loadMissing(missings) {\n    return this.loader.loadRemoteSchemas(missings).then(schemas => {\n      Object.keys(schemas).forEach(k => {\n        this.tv4.addSchema(k, schemas[k]);\n      });\n    });\n  }\n}\n"]}